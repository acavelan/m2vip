#include <cstdlib>
#include <cstdio>
#include <ctime>
#include <chrono>
#include <immintrin.h>

#define SIZE 4

using namespace std::chrono;

void display(float *m)
{
    for(int y=0; y<SIZE; ++y)
    {
        for(int x=0; x<SIZE; ++x)
        {
            printf("%8.1f", m[y * SIZE + x]);
        }
        printf("\n");
    }
}

void init(float *m)
{
    for(int i=0; i<SIZE * SIZE; ++i)
        m[i] = 0.0f;
}

int main(void)
{
    /*float *t0;
    posix_memalign((void**)&t0, 16, 4 * sizeof(float));
    for(int i=0; i<4; i++) t1[i] = i+1;
    free(t0);*/
    
    /*alignas(16) float t0[4] = {1,2,3,4};
    alignas(16) float t1[4] = {1,2,3,4};
    alignas(16) float sum[4];*/

    /*__m128 r0, r1;
    r0 = _mm_load_ps(t0);
    r1 = _mm_load_ps(t1);
    
    r0 = r0 + r1;*/
    //r0 = _mm_add_ps(r0, r1);
    
    // _mm_set1_ps
    
    /*_mm_store_ps(sum, r0);
    
    for(int i=0; i<4; i++)
        printf("%4.2f ", sum[i]);
    printf("\n");*/
    
    float *m1, *m2, *r;
    time_point<system_clock> start, end;
    
    m1 = new float[SIZE * SIZE];
    m2 = new float[SIZE * SIZE];
    r = new float[SIZE * SIZE];
    
    srand(time(0));
    
    for(int i=0; i<SIZE*SIZE; ++i)
    {
        m1[i] = rand() % 5;
        m2[i] = rand() % 5;
    }
    
    start = system_clock::now();
    
    init(r);
    
    for(int i=0; i<SIZE; ++i)
        for(int k=0; k<SIZE; ++k)
            for(int j=0; j<SIZE; ++j)
                r[i * SIZE + j] += m1[i * SIZE + k] * m2[k * SIZE + j];
    
    end = system_clock::now();
    
    int ms = duration_cast<milliseconds>(end-start).count();
    
    printf("time: %d ms\n", ms);
    
    printf("m1\n");
    display(m1);
    
    printf("m2\n");
    display(m2);
    
    printf("r\n");
    
    display(r);
    
    delete[] m1;
    delete[] m2;
    delete[] r;
    
    return 0;
}
